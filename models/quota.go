// Code generated by go-swagger; DO NOT EDIT.

// SPDX-FileCopyrightText: Copyright 2025 SAP SE or an SAP affiliate company
//
// SPDX-License-Identifier: Apache-2.0

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// Quota quota
//
// swagger:model quota
type Quota struct {

	// The configured datacenter quota limit. A setting of null means it is using the deployment default quota. A setting of -1 means unlimited.
	// Example: 5
	Datacenter *int64 `json:"datacenter,omitempty" db:"datacenter,omitempty"`

	// The configured domain quota limit for provider Akamai. A setting of null means it is using the deployment default quota. A setting of -1 means unlimited.
	// Example: 5
	DomainAkamai *int64 `json:"domain_akamai,omitempty" db:"domain_akamai,omitempty"`

	// The configured domain quota limit for provider F5. A setting of null means it is using the deployment default quota. A setting of -1 means unlimited.
	// Example: 5
	DomainF5 *int64 `json:"domain_f5,omitempty" db:"domain_f5,omitempty"`

	// The configured member quota limit. A setting of null means it is using the deployment default quota. A setting of -1 means unlimited.
	// Example: 5
	Member *int64 `json:"member,omitempty" db:"member,omitempty"`

	// The configured monitor quota limit. A setting of null means it is using the deployment default quota. A setting of -1 means unlimited.
	// Example: 5
	Monitor *int64 `json:"monitor,omitempty" db:"monitor,omitempty"`

	// The configured pool quota limit. A setting of null means it is using the deployment default quota. A setting of -1 means unlimited.
	// Example: 5
	Pool *int64 `json:"pool,omitempty" db:"pool,omitempty"`
}

// Validate validates this quota
func (m *Quota) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this quota based on context it is used
func (m *Quota) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Quota) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Quota) UnmarshalBinary(b []byte) error {
	var res Quota
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
