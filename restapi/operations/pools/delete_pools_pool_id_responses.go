// Code generated by go-swagger; DO NOT EDIT.

// SPDX-FileCopyrightText: Copyright 2025 SAP SE or an SAP affiliate company
//
// SPDX-License-Identifier: Apache-2.0

package pools

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/sapcc/andromeda/models"
)

// DeletePoolsPoolIDNoContentCode is the HTTP code returned for type DeletePoolsPoolIDNoContent
const DeletePoolsPoolIDNoContentCode int = 204

/*
DeletePoolsPoolIDNoContent Resource successfully deleted.

swagger:response deletePoolsPoolIdNoContent
*/
type DeletePoolsPoolIDNoContent struct {
}

// NewDeletePoolsPoolIDNoContent creates DeletePoolsPoolIDNoContent with default headers values
func NewDeletePoolsPoolIDNoContent() *DeletePoolsPoolIDNoContent {

	return &DeletePoolsPoolIDNoContent{}
}

// WriteResponse to the client
func (o *DeletePoolsPoolIDNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// DeletePoolsPoolIDNotFoundCode is the HTTP code returned for type DeletePoolsPoolIDNotFound
const DeletePoolsPoolIDNotFoundCode int = 404

/*
DeletePoolsPoolIDNotFound Not Found

swagger:response deletePoolsPoolIdNotFound
*/
type DeletePoolsPoolIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeletePoolsPoolIDNotFound creates DeletePoolsPoolIDNotFound with default headers values
func NewDeletePoolsPoolIDNotFound() *DeletePoolsPoolIDNotFound {

	return &DeletePoolsPoolIDNotFound{}
}

// WithPayload adds the payload to the delete pools pool Id not found response
func (o *DeletePoolsPoolIDNotFound) WithPayload(payload *models.Error) *DeletePoolsPoolIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete pools pool Id not found response
func (o *DeletePoolsPoolIDNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeletePoolsPoolIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeletePoolsPoolIDConflictCode is the HTTP code returned for type DeletePoolsPoolIDConflict
const DeletePoolsPoolIDConflictCode int = 409

/*
DeletePoolsPoolIDConflict Conflict

swagger:response deletePoolsPoolIdConflict
*/
type DeletePoolsPoolIDConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeletePoolsPoolIDConflict creates DeletePoolsPoolIDConflict with default headers values
func NewDeletePoolsPoolIDConflict() *DeletePoolsPoolIDConflict {

	return &DeletePoolsPoolIDConflict{}
}

// WithPayload adds the payload to the delete pools pool Id conflict response
func (o *DeletePoolsPoolIDConflict) WithPayload(payload *models.Error) *DeletePoolsPoolIDConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete pools pool Id conflict response
func (o *DeletePoolsPoolIDConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeletePoolsPoolIDConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
DeletePoolsPoolIDDefault Unexpected Error

swagger:response deletePoolsPoolIdDefault
*/
type DeletePoolsPoolIDDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeletePoolsPoolIDDefault creates DeletePoolsPoolIDDefault with default headers values
func NewDeletePoolsPoolIDDefault(code int) *DeletePoolsPoolIDDefault {
	if code <= 0 {
		code = 500
	}

	return &DeletePoolsPoolIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the delete pools pool ID default response
func (o *DeletePoolsPoolIDDefault) WithStatusCode(code int) *DeletePoolsPoolIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the delete pools pool ID default response
func (o *DeletePoolsPoolIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the delete pools pool ID default response
func (o *DeletePoolsPoolIDDefault) WithPayload(payload *models.Error) *DeletePoolsPoolIDDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete pools pool ID default response
func (o *DeletePoolsPoolIDDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeletePoolsPoolIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
