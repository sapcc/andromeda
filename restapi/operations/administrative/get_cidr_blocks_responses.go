// Code generated by go-swagger; DO NOT EDIT.

// SPDX-FileCopyrightText: Copyright 2025 SAP SE or an SAP affiliate company
//
// SPDX-License-Identifier: Apache-2.0

package administrative

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/sapcc/andromeda/models"
)

// GetCidrBlocksOKCode is the HTTP code returned for type GetCidrBlocksOK
const GetCidrBlocksOKCode int = 200

/*
GetCidrBlocksOK A JSON array of CIDR blocks

swagger:response getCidrBlocksOK
*/
type GetCidrBlocksOK struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewGetCidrBlocksOK creates GetCidrBlocksOK with default headers values
func NewGetCidrBlocksOK() *GetCidrBlocksOK {

	return &GetCidrBlocksOK{}
}

// WithPayload adds the payload to the get cidr blocks o k response
func (o *GetCidrBlocksOK) WithPayload(payload interface{}) *GetCidrBlocksOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get cidr blocks o k response
func (o *GetCidrBlocksOK) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCidrBlocksOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*
GetCidrBlocksDefault Unexpected Error

swagger:response getCidrBlocksDefault
*/
type GetCidrBlocksDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetCidrBlocksDefault creates GetCidrBlocksDefault with default headers values
func NewGetCidrBlocksDefault(code int) *GetCidrBlocksDefault {
	if code <= 0 {
		code = 500
	}

	return &GetCidrBlocksDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get cidr blocks default response
func (o *GetCidrBlocksDefault) WithStatusCode(code int) *GetCidrBlocksDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get cidr blocks default response
func (o *GetCidrBlocksDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get cidr blocks default response
func (o *GetCidrBlocksDefault) WithPayload(payload *models.Error) *GetCidrBlocksDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get cidr blocks default response
func (o *GetCidrBlocksDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCidrBlocksDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
