// Code generated by go-swagger; DO NOT EDIT.

// SPDX-FileCopyrightText: Copyright 2025 SAP SE or an SAP affiliate company
//
// SPDX-License-Identifier: Apache-2.0

package datacenters

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/sapcc/andromeda/models"
)

// DeleteDatacentersDatacenterIDNoContentCode is the HTTP code returned for type DeleteDatacentersDatacenterIDNoContent
const DeleteDatacentersDatacenterIDNoContentCode int = 204

/*
DeleteDatacentersDatacenterIDNoContent Resource successfully deleted.

swagger:response deleteDatacentersDatacenterIdNoContent
*/
type DeleteDatacentersDatacenterIDNoContent struct {
}

// NewDeleteDatacentersDatacenterIDNoContent creates DeleteDatacentersDatacenterIDNoContent with default headers values
func NewDeleteDatacentersDatacenterIDNoContent() *DeleteDatacentersDatacenterIDNoContent {

	return &DeleteDatacentersDatacenterIDNoContent{}
}

// WriteResponse to the client
func (o *DeleteDatacentersDatacenterIDNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// DeleteDatacentersDatacenterIDNotFoundCode is the HTTP code returned for type DeleteDatacentersDatacenterIDNotFound
const DeleteDatacentersDatacenterIDNotFoundCode int = 404

/*
DeleteDatacentersDatacenterIDNotFound Not Found

swagger:response deleteDatacentersDatacenterIdNotFound
*/
type DeleteDatacentersDatacenterIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteDatacentersDatacenterIDNotFound creates DeleteDatacentersDatacenterIDNotFound with default headers values
func NewDeleteDatacentersDatacenterIDNotFound() *DeleteDatacentersDatacenterIDNotFound {

	return &DeleteDatacentersDatacenterIDNotFound{}
}

// WithPayload adds the payload to the delete datacenters datacenter Id not found response
func (o *DeleteDatacentersDatacenterIDNotFound) WithPayload(payload *models.Error) *DeleteDatacentersDatacenterIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete datacenters datacenter Id not found response
func (o *DeleteDatacentersDatacenterIDNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteDatacentersDatacenterIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
DeleteDatacentersDatacenterIDDefault Unexpected Error

swagger:response deleteDatacentersDatacenterIdDefault
*/
type DeleteDatacentersDatacenterIDDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteDatacentersDatacenterIDDefault creates DeleteDatacentersDatacenterIDDefault with default headers values
func NewDeleteDatacentersDatacenterIDDefault(code int) *DeleteDatacentersDatacenterIDDefault {
	if code <= 0 {
		code = 500
	}

	return &DeleteDatacentersDatacenterIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the delete datacenters datacenter ID default response
func (o *DeleteDatacentersDatacenterIDDefault) WithStatusCode(code int) *DeleteDatacentersDatacenterIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the delete datacenters datacenter ID default response
func (o *DeleteDatacentersDatacenterIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the delete datacenters datacenter ID default response
func (o *DeleteDatacentersDatacenterIDDefault) WithPayload(payload *models.Error) *DeleteDatacentersDatacenterIDDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete datacenters datacenter ID default response
func (o *DeleteDatacentersDatacenterIDDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteDatacentersDatacenterIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
