// Code generated by go-swagger; DO NOT EDIT.

// SPDX-FileCopyrightText: Copyright 2025 SAP SE or an SAP affiliate company
//
// SPDX-License-Identifier: Apache-2.0

package members

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/sapcc/andromeda/models"
)

// GetMembersMemberIDOKCode is the HTTP code returned for type GetMembersMemberIDOK
const GetMembersMemberIDOKCode int = 200

/*
GetMembersMemberIDOK Shows the details of a specific member.

swagger:response getMembersMemberIdOK
*/
type GetMembersMemberIDOK struct {

	/*
	  In: Body
	*/
	Payload *GetMembersMemberIDOKBody `json:"body,omitempty"`
}

// NewGetMembersMemberIDOK creates GetMembersMemberIDOK with default headers values
func NewGetMembersMemberIDOK() *GetMembersMemberIDOK {

	return &GetMembersMemberIDOK{}
}

// WithPayload adds the payload to the get members member Id o k response
func (o *GetMembersMemberIDOK) WithPayload(payload *GetMembersMemberIDOKBody) *GetMembersMemberIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get members member Id o k response
func (o *GetMembersMemberIDOK) SetPayload(payload *GetMembersMemberIDOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMembersMemberIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetMembersMemberIDNotFoundCode is the HTTP code returned for type GetMembersMemberIDNotFound
const GetMembersMemberIDNotFoundCode int = 404

/*
GetMembersMemberIDNotFound Not Found

swagger:response getMembersMemberIdNotFound
*/
type GetMembersMemberIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetMembersMemberIDNotFound creates GetMembersMemberIDNotFound with default headers values
func NewGetMembersMemberIDNotFound() *GetMembersMemberIDNotFound {

	return &GetMembersMemberIDNotFound{}
}

// WithPayload adds the payload to the get members member Id not found response
func (o *GetMembersMemberIDNotFound) WithPayload(payload *models.Error) *GetMembersMemberIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get members member Id not found response
func (o *GetMembersMemberIDNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMembersMemberIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
GetMembersMemberIDDefault Unexpected Error

swagger:response getMembersMemberIdDefault
*/
type GetMembersMemberIDDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetMembersMemberIDDefault creates GetMembersMemberIDDefault with default headers values
func NewGetMembersMemberIDDefault(code int) *GetMembersMemberIDDefault {
	if code <= 0 {
		code = 500
	}

	return &GetMembersMemberIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get members member ID default response
func (o *GetMembersMemberIDDefault) WithStatusCode(code int) *GetMembersMemberIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get members member ID default response
func (o *GetMembersMemberIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get members member ID default response
func (o *GetMembersMemberIDDefault) WithPayload(payload *models.Error) *GetMembersMemberIDDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get members member ID default response
func (o *GetMembersMemberIDDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMembersMemberIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
