// Code generated by go-swagger; DO NOT EDIT.

// SPDX-FileCopyrightText: Copyright 2025 SAP SE or an SAP affiliate company
//
// SPDX-License-Identifier: Apache-2.0

package monitors

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/sapcc/andromeda/models"
)

// PutMonitorsMonitorIDAcceptedCode is the HTTP code returned for type PutMonitorsMonitorIDAccepted
const PutMonitorsMonitorIDAcceptedCode int = 202

/*
PutMonitorsMonitorIDAccepted Updated monitor.

swagger:response putMonitorsMonitorIdAccepted
*/
type PutMonitorsMonitorIDAccepted struct {

	/*
	  In: Body
	*/
	Payload *PutMonitorsMonitorIDAcceptedBody `json:"body,omitempty"`
}

// NewPutMonitorsMonitorIDAccepted creates PutMonitorsMonitorIDAccepted with default headers values
func NewPutMonitorsMonitorIDAccepted() *PutMonitorsMonitorIDAccepted {

	return &PutMonitorsMonitorIDAccepted{}
}

// WithPayload adds the payload to the put monitors monitor Id accepted response
func (o *PutMonitorsMonitorIDAccepted) WithPayload(payload *PutMonitorsMonitorIDAcceptedBody) *PutMonitorsMonitorIDAccepted {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put monitors monitor Id accepted response
func (o *PutMonitorsMonitorIDAccepted) SetPayload(payload *PutMonitorsMonitorIDAcceptedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutMonitorsMonitorIDAccepted) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(202)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutMonitorsMonitorIDBadRequestCode is the HTTP code returned for type PutMonitorsMonitorIDBadRequest
const PutMonitorsMonitorIDBadRequestCode int = 400

/*
PutMonitorsMonitorIDBadRequest Bad request

swagger:response putMonitorsMonitorIdBadRequest
*/
type PutMonitorsMonitorIDBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutMonitorsMonitorIDBadRequest creates PutMonitorsMonitorIDBadRequest with default headers values
func NewPutMonitorsMonitorIDBadRequest() *PutMonitorsMonitorIDBadRequest {

	return &PutMonitorsMonitorIDBadRequest{}
}

// WithPayload adds the payload to the put monitors monitor Id bad request response
func (o *PutMonitorsMonitorIDBadRequest) WithPayload(payload *models.Error) *PutMonitorsMonitorIDBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put monitors monitor Id bad request response
func (o *PutMonitorsMonitorIDBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutMonitorsMonitorIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutMonitorsMonitorIDNotFoundCode is the HTTP code returned for type PutMonitorsMonitorIDNotFound
const PutMonitorsMonitorIDNotFoundCode int = 404

/*
PutMonitorsMonitorIDNotFound Not Found

swagger:response putMonitorsMonitorIdNotFound
*/
type PutMonitorsMonitorIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutMonitorsMonitorIDNotFound creates PutMonitorsMonitorIDNotFound with default headers values
func NewPutMonitorsMonitorIDNotFound() *PutMonitorsMonitorIDNotFound {

	return &PutMonitorsMonitorIDNotFound{}
}

// WithPayload adds the payload to the put monitors monitor Id not found response
func (o *PutMonitorsMonitorIDNotFound) WithPayload(payload *models.Error) *PutMonitorsMonitorIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put monitors monitor Id not found response
func (o *PutMonitorsMonitorIDNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutMonitorsMonitorIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
PutMonitorsMonitorIDDefault Unexpected Error

swagger:response putMonitorsMonitorIdDefault
*/
type PutMonitorsMonitorIDDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutMonitorsMonitorIDDefault creates PutMonitorsMonitorIDDefault with default headers values
func NewPutMonitorsMonitorIDDefault(code int) *PutMonitorsMonitorIDDefault {
	if code <= 0 {
		code = 500
	}

	return &PutMonitorsMonitorIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the put monitors monitor ID default response
func (o *PutMonitorsMonitorIDDefault) WithStatusCode(code int) *PutMonitorsMonitorIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the put monitors monitor ID default response
func (o *PutMonitorsMonitorIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the put monitors monitor ID default response
func (o *PutMonitorsMonitorIDDefault) WithPayload(payload *models.Error) *PutMonitorsMonitorIDDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put monitors monitor ID default response
func (o *PutMonitorsMonitorIDDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutMonitorsMonitorIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
