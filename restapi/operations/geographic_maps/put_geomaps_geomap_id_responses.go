// Code generated by go-swagger; DO NOT EDIT.

// SPDX-FileCopyrightText: Copyright 2025 SAP SE or an SAP affiliate company
//
// SPDX-License-Identifier: Apache-2.0

package geographic_maps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/sapcc/andromeda/models"
)

// PutGeomapsGeomapIDAcceptedCode is the HTTP code returned for type PutGeomapsGeomapIDAccepted
const PutGeomapsGeomapIDAcceptedCode int = 202

/*
PutGeomapsGeomapIDAccepted Updated geomap.

swagger:response putGeomapsGeomapIdAccepted
*/
type PutGeomapsGeomapIDAccepted struct {

	/*
	  In: Body
	*/
	Payload *PutGeomapsGeomapIDAcceptedBody `json:"body,omitempty"`
}

// NewPutGeomapsGeomapIDAccepted creates PutGeomapsGeomapIDAccepted with default headers values
func NewPutGeomapsGeomapIDAccepted() *PutGeomapsGeomapIDAccepted {

	return &PutGeomapsGeomapIDAccepted{}
}

// WithPayload adds the payload to the put geomaps geomap Id accepted response
func (o *PutGeomapsGeomapIDAccepted) WithPayload(payload *PutGeomapsGeomapIDAcceptedBody) *PutGeomapsGeomapIDAccepted {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put geomaps geomap Id accepted response
func (o *PutGeomapsGeomapIDAccepted) SetPayload(payload *PutGeomapsGeomapIDAcceptedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutGeomapsGeomapIDAccepted) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(202)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutGeomapsGeomapIDBadRequestCode is the HTTP code returned for type PutGeomapsGeomapIDBadRequest
const PutGeomapsGeomapIDBadRequestCode int = 400

/*
PutGeomapsGeomapIDBadRequest Bad request

swagger:response putGeomapsGeomapIdBadRequest
*/
type PutGeomapsGeomapIDBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutGeomapsGeomapIDBadRequest creates PutGeomapsGeomapIDBadRequest with default headers values
func NewPutGeomapsGeomapIDBadRequest() *PutGeomapsGeomapIDBadRequest {

	return &PutGeomapsGeomapIDBadRequest{}
}

// WithPayload adds the payload to the put geomaps geomap Id bad request response
func (o *PutGeomapsGeomapIDBadRequest) WithPayload(payload *models.Error) *PutGeomapsGeomapIDBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put geomaps geomap Id bad request response
func (o *PutGeomapsGeomapIDBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutGeomapsGeomapIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutGeomapsGeomapIDNotFoundCode is the HTTP code returned for type PutGeomapsGeomapIDNotFound
const PutGeomapsGeomapIDNotFoundCode int = 404

/*
PutGeomapsGeomapIDNotFound Not Found

swagger:response putGeomapsGeomapIdNotFound
*/
type PutGeomapsGeomapIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutGeomapsGeomapIDNotFound creates PutGeomapsGeomapIDNotFound with default headers values
func NewPutGeomapsGeomapIDNotFound() *PutGeomapsGeomapIDNotFound {

	return &PutGeomapsGeomapIDNotFound{}
}

// WithPayload adds the payload to the put geomaps geomap Id not found response
func (o *PutGeomapsGeomapIDNotFound) WithPayload(payload *models.Error) *PutGeomapsGeomapIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put geomaps geomap Id not found response
func (o *PutGeomapsGeomapIDNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutGeomapsGeomapIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
PutGeomapsGeomapIDDefault Unexpected Error

swagger:response putGeomapsGeomapIdDefault
*/
type PutGeomapsGeomapIDDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutGeomapsGeomapIDDefault creates PutGeomapsGeomapIDDefault with default headers values
func NewPutGeomapsGeomapIDDefault(code int) *PutGeomapsGeomapIDDefault {
	if code <= 0 {
		code = 500
	}

	return &PutGeomapsGeomapIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the put geomaps geomap ID default response
func (o *PutGeomapsGeomapIDDefault) WithStatusCode(code int) *PutGeomapsGeomapIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the put geomaps geomap ID default response
func (o *PutGeomapsGeomapIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the put geomaps geomap ID default response
func (o *PutGeomapsGeomapIDDefault) WithPayload(payload *models.Error) *PutGeomapsGeomapIDDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put geomaps geomap ID default response
func (o *PutGeomapsGeomapIDDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutGeomapsGeomapIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
