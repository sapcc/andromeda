// SPDX-FileCopyrightText: Copyright 2025 SAP SE or an SAP affiliate company
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: internal/rpcmodels/rpc_models.proto

package rpcmodels

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Monitor_MonitorType int32

const (
	Monitor_HTTP  Monitor_MonitorType = 0
	Monitor_HTTPS Monitor_MonitorType = 1
	Monitor_ICMP  Monitor_MonitorType = 2
	Monitor_TCP   Monitor_MonitorType = 3
	Monitor_UDP   Monitor_MonitorType = 4
	Monitor_POP   Monitor_MonitorType = 5
	Monitor_SMTP  Monitor_MonitorType = 7
)

// Enum value maps for Monitor_MonitorType.
var (
	Monitor_MonitorType_name = map[int32]string{
		0: "HTTP",
		1: "HTTPS",
		2: "ICMP",
		3: "TCP",
		4: "UDP",
		5: "POP",
		7: "SMTP",
	}
	Monitor_MonitorType_value = map[string]int32{
		"HTTP":  0,
		"HTTPS": 1,
		"ICMP":  2,
		"TCP":   3,
		"UDP":   4,
		"POP":   5,
		"SMTP":  7,
	}
)

func (x Monitor_MonitorType) Enum() *Monitor_MonitorType {
	p := new(Monitor_MonitorType)
	*p = x
	return p
}

func (x Monitor_MonitorType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Monitor_MonitorType) Descriptor() protoreflect.EnumDescriptor {
	return file_internal_rpcmodels_rpc_models_proto_enumTypes[0].Descriptor()
}

func (Monitor_MonitorType) Type() protoreflect.EnumType {
	return &file_internal_rpcmodels_rpc_models_proto_enumTypes[0]
}

func (x Monitor_MonitorType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Monitor_MonitorType.Descriptor instead.
func (Monitor_MonitorType) EnumDescriptor() ([]byte, []int) {
	return file_internal_rpcmodels_rpc_models_proto_rawDescGZIP(), []int{6, 0}
}

type Monitor_HttpMethod int32

const (
	Monitor_GET     Monitor_HttpMethod = 0
	Monitor_POST    Monitor_HttpMethod = 1
	Monitor_PUT     Monitor_HttpMethod = 2
	Monitor_HEAD    Monitor_HttpMethod = 3
	Monitor_PATCH   Monitor_HttpMethod = 4
	Monitor_DELETE  Monitor_HttpMethod = 5
	Monitor_OPTIONS Monitor_HttpMethod = 6
)

// Enum value maps for Monitor_HttpMethod.
var (
	Monitor_HttpMethod_name = map[int32]string{
		0: "GET",
		1: "POST",
		2: "PUT",
		3: "HEAD",
		4: "PATCH",
		5: "DELETE",
		6: "OPTIONS",
	}
	Monitor_HttpMethod_value = map[string]int32{
		"GET":     0,
		"POST":    1,
		"PUT":     2,
		"HEAD":    3,
		"PATCH":   4,
		"DELETE":  5,
		"OPTIONS": 6,
	}
)

func (x Monitor_HttpMethod) Enum() *Monitor_HttpMethod {
	p := new(Monitor_HttpMethod)
	*p = x
	return p
}

func (x Monitor_HttpMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Monitor_HttpMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_internal_rpcmodels_rpc_models_proto_enumTypes[1].Descriptor()
}

func (Monitor_HttpMethod) Type() protoreflect.EnumType {
	return &file_internal_rpcmodels_rpc_models_proto_enumTypes[1]
}

func (x Monitor_HttpMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Monitor_HttpMethod.Descriptor instead.
func (Monitor_HttpMethod) EnumDescriptor() ([]byte, []int) {
	return file_internal_rpcmodels_rpc_models_proto_rawDescGZIP(), []int{6, 1}
}

type GetDNSMetricsRequest_TimeRangeValue int32

const (
	GetDNSMetricsRequest_LAST_HOUR GetDNSMetricsRequest_TimeRangeValue = 0
	GetDNSMetricsRequest_LAST_DAY  GetDNSMetricsRequest_TimeRangeValue = 1
	GetDNSMetricsRequest_LAST_WEEK GetDNSMetricsRequest_TimeRangeValue = 2
)

// Enum value maps for GetDNSMetricsRequest_TimeRangeValue.
var (
	GetDNSMetricsRequest_TimeRangeValue_name = map[int32]string{
		0: "LAST_HOUR",
		1: "LAST_DAY",
		2: "LAST_WEEK",
	}
	GetDNSMetricsRequest_TimeRangeValue_value = map[string]int32{
		"LAST_HOUR": 0,
		"LAST_DAY":  1,
		"LAST_WEEK": 2,
	}
)

func (x GetDNSMetricsRequest_TimeRangeValue) Enum() *GetDNSMetricsRequest_TimeRangeValue {
	p := new(GetDNSMetricsRequest_TimeRangeValue)
	*p = x
	return p
}

func (x GetDNSMetricsRequest_TimeRangeValue) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetDNSMetricsRequest_TimeRangeValue) Descriptor() protoreflect.EnumDescriptor {
	return file_internal_rpcmodels_rpc_models_proto_enumTypes[2].Descriptor()
}

func (GetDNSMetricsRequest_TimeRangeValue) Type() protoreflect.EnumType {
	return &file_internal_rpcmodels_rpc_models_proto_enumTypes[2]
}

func (x GetDNSMetricsRequest_TimeRangeValue) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetDNSMetricsRequest_TimeRangeValue.Descriptor instead.
func (GetDNSMetricsRequest_TimeRangeValue) EnumDescriptor() ([]byte, []int) {
	return file_internal_rpcmodels_rpc_models_proto_rawDescGZIP(), []int{11, 0}
}

type Domain struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Id                 string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AdminStateUp       bool                   `protobuf:"varint,2,opt,name=admin_state_up,json=adminStateUp,proto3" json:"admin_state_up,omitempty"`
	Aliases            []string               `protobuf:"bytes,3,rep,name=aliases,proto3" json:"aliases,omitempty"`
	Fqdn               string                 `protobuf:"bytes,4,opt,name=fqdn,proto3" json:"fqdn,omitempty"`
	Mode               string                 `protobuf:"bytes,5,opt,name=mode,proto3" json:"mode,omitempty"`
	Pools              []*Pool                `protobuf:"bytes,6,rep,name=pools,proto3" json:"pools,omitempty"`
	RecordType         string                 `protobuf:"bytes,7,opt,name=record_type,json=recordType,proto3" json:"record_type,omitempty"`
	Datacenters        []*Datacenter          `protobuf:"bytes,8,rep,name=datacenters,proto3" json:"datacenters,omitempty"`
	ProvisioningStatus string                 `protobuf:"bytes,9,opt,name=provisioning_status,json=provisioningStatus,proto3" json:"provisioning_status,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Domain) Reset() {
	*x = Domain{}
	mi := &file_internal_rpcmodels_rpc_models_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Domain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Domain) ProtoMessage() {}

func (x *Domain) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpcmodels_rpc_models_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Domain.ProtoReflect.Descriptor instead.
func (*Domain) Descriptor() ([]byte, []int) {
	return file_internal_rpcmodels_rpc_models_proto_rawDescGZIP(), []int{0}
}

func (x *Domain) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Domain) GetAdminStateUp() bool {
	if x != nil {
		return x.AdminStateUp
	}
	return false
}

func (x *Domain) GetAliases() []string {
	if x != nil {
		return x.Aliases
	}
	return nil
}

func (x *Domain) GetFqdn() string {
	if x != nil {
		return x.Fqdn
	}
	return ""
}

func (x *Domain) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *Domain) GetPools() []*Pool {
	if x != nil {
		return x.Pools
	}
	return nil
}

func (x *Domain) GetRecordType() string {
	if x != nil {
		return x.RecordType
	}
	return ""
}

func (x *Domain) GetDatacenters() []*Datacenter {
	if x != nil {
		return x.Datacenters
	}
	return nil
}

func (x *Domain) GetProvisioningStatus() string {
	if x != nil {
		return x.ProvisioningStatus
	}
	return ""
}

type Pool struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Id                 string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AdminStateUp       bool                   `protobuf:"varint,2,opt,name=admin_state_up,json=adminStateUp,proto3" json:"admin_state_up,omitempty"`
	Members            []*Member              `protobuf:"bytes,3,rep,name=members,proto3" json:"members,omitempty"`
	Monitors           []*Monitor             `protobuf:"bytes,4,rep,name=monitors,proto3" json:"monitors,omitempty"`
	ProvisioningStatus string                 `protobuf:"bytes,5,opt,name=provisioning_status,json=provisioningStatus,proto3" json:"provisioning_status,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Pool) Reset() {
	*x = Pool{}
	mi := &file_internal_rpcmodels_rpc_models_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Pool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pool) ProtoMessage() {}

func (x *Pool) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpcmodels_rpc_models_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pool.ProtoReflect.Descriptor instead.
func (*Pool) Descriptor() ([]byte, []int) {
	return file_internal_rpcmodels_rpc_models_proto_rawDescGZIP(), []int{1}
}

func (x *Pool) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Pool) GetAdminStateUp() bool {
	if x != nil {
		return x.AdminStateUp
	}
	return false
}

func (x *Pool) GetMembers() []*Member {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *Pool) GetMonitors() []*Monitor {
	if x != nil {
		return x.Monitors
	}
	return nil
}

func (x *Pool) GetProvisioningStatus() string {
	if x != nil {
		return x.ProvisioningStatus
	}
	return ""
}

type Datacenter struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Id                 string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AdminStateUp       bool                   `protobuf:"varint,2,opt,name=admin_state_up,json=adminStateUp,proto3" json:"admin_state_up,omitempty"`
	Continent          string                 `protobuf:"bytes,3,opt,name=continent,proto3" json:"continent,omitempty"`
	Country            string                 `protobuf:"bytes,4,opt,name=country,proto3" json:"country,omitempty"`
	StateOrProvince    string                 `protobuf:"bytes,5,opt,name=state_or_province,json=stateOrProvince,proto3" json:"state_or_province,omitempty"`
	City               string                 `protobuf:"bytes,6,opt,name=city,proto3" json:"city,omitempty"`
	Longitude          float64                `protobuf:"fixed64,7,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Latitude           float64                `protobuf:"fixed64,8,opt,name=latitude,proto3" json:"latitude,omitempty"`
	ProvisioningStatus string                 `protobuf:"bytes,9,opt,name=provisioning_status,json=provisioningStatus,proto3" json:"provisioning_status,omitempty"`
	Scope              string                 `protobuf:"bytes,10,opt,name=scope,proto3" json:"scope,omitempty"`
	Provider           string                 `protobuf:"bytes,11,opt,name=provider,proto3" json:"provider,omitempty"`
	Meta               int32                  `protobuf:"varint,12,opt,name=meta,proto3" json:"meta,omitempty"`
	ProjectId          string                 `protobuf:"bytes,13,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Datacenter) Reset() {
	*x = Datacenter{}
	mi := &file_internal_rpcmodels_rpc_models_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Datacenter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Datacenter) ProtoMessage() {}

func (x *Datacenter) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpcmodels_rpc_models_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Datacenter.ProtoReflect.Descriptor instead.
func (*Datacenter) Descriptor() ([]byte, []int) {
	return file_internal_rpcmodels_rpc_models_proto_rawDescGZIP(), []int{2}
}

func (x *Datacenter) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Datacenter) GetAdminStateUp() bool {
	if x != nil {
		return x.AdminStateUp
	}
	return false
}

func (x *Datacenter) GetContinent() string {
	if x != nil {
		return x.Continent
	}
	return ""
}

func (x *Datacenter) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Datacenter) GetStateOrProvince() string {
	if x != nil {
		return x.StateOrProvince
	}
	return ""
}

func (x *Datacenter) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *Datacenter) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *Datacenter) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *Datacenter) GetProvisioningStatus() string {
	if x != nil {
		return x.ProvisioningStatus
	}
	return ""
}

func (x *Datacenter) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *Datacenter) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *Datacenter) GetMeta() int32 {
	if x != nil {
		return x.Meta
	}
	return 0
}

func (x *Datacenter) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type GeomapAssignment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Datacenter    string                 `protobuf:"bytes,1,opt,name=datacenter,proto3" json:"datacenter,omitempty"`
	Countries     []string               `protobuf:"bytes,2,rep,name=countries,proto3" json:"countries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GeomapAssignment) Reset() {
	*x = GeomapAssignment{}
	mi := &file_internal_rpcmodels_rpc_models_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GeomapAssignment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeomapAssignment) ProtoMessage() {}

func (x *GeomapAssignment) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpcmodels_rpc_models_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeomapAssignment.ProtoReflect.Descriptor instead.
func (*GeomapAssignment) Descriptor() ([]byte, []int) {
	return file_internal_rpcmodels_rpc_models_proto_rawDescGZIP(), []int{3}
}

func (x *GeomapAssignment) GetDatacenter() string {
	if x != nil {
		return x.Datacenter
	}
	return ""
}

func (x *GeomapAssignment) GetCountries() []string {
	if x != nil {
		return x.Countries
	}
	return nil
}

type Geomap struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Id                 string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DefaultDatacenter  string                 `protobuf:"bytes,2,opt,name=default_datacenter,json=defaultDatacenter,proto3" json:"default_datacenter,omitempty"`
	Assignment         []*GeomapAssignment    `protobuf:"bytes,3,rep,name=assignment,proto3" json:"assignment,omitempty"`
	ProvisioningStatus string                 `protobuf:"bytes,4,opt,name=provisioning_status,json=provisioningStatus,proto3" json:"provisioning_status,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Geomap) Reset() {
	*x = Geomap{}
	mi := &file_internal_rpcmodels_rpc_models_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Geomap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Geomap) ProtoMessage() {}

func (x *Geomap) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpcmodels_rpc_models_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Geomap.ProtoReflect.Descriptor instead.
func (*Geomap) Descriptor() ([]byte, []int) {
	return file_internal_rpcmodels_rpc_models_proto_rawDescGZIP(), []int{4}
}

func (x *Geomap) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Geomap) GetDefaultDatacenter() string {
	if x != nil {
		return x.DefaultDatacenter
	}
	return ""
}

func (x *Geomap) GetAssignment() []*GeomapAssignment {
	if x != nil {
		return x.Assignment
	}
	return nil
}

func (x *Geomap) GetProvisioningStatus() string {
	if x != nil {
		return x.ProvisioningStatus
	}
	return ""
}

type Member struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Id                 string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AdminStateUp       bool                   `protobuf:"varint,2,opt,name=admin_state_up,json=adminStateUp,proto3" json:"admin_state_up,omitempty"`
	Address            string                 `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	Port               uint32                 `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`
	Datacenter         string                 `protobuf:"bytes,5,opt,name=datacenter,proto3" json:"datacenter,omitempty"`
	ProvisioningStatus string                 `protobuf:"bytes,6,opt,name=provisioning_status,json=provisioningStatus,proto3" json:"provisioning_status,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Member) Reset() {
	*x = Member{}
	mi := &file_internal_rpcmodels_rpc_models_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Member) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Member) ProtoMessage() {}

func (x *Member) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpcmodels_rpc_models_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Member.ProtoReflect.Descriptor instead.
func (*Member) Descriptor() ([]byte, []int) {
	return file_internal_rpcmodels_rpc_models_proto_rawDescGZIP(), []int{5}
}

func (x *Member) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Member) GetAdminStateUp() bool {
	if x != nil {
		return x.AdminStateUp
	}
	return false
}

func (x *Member) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Member) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *Member) GetDatacenter() string {
	if x != nil {
		return x.Datacenter
	}
	return ""
}

func (x *Member) GetProvisioningStatus() string {
	if x != nil {
		return x.ProvisioningStatus
	}
	return ""
}

type Monitor struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Id                 string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AdminStateUp       bool                   `protobuf:"varint,2,opt,name=admin_state_up,json=adminStateUp,proto3" json:"admin_state_up,omitempty"`
	Interval           int64                  `protobuf:"varint,3,opt,name=interval,proto3" json:"interval,omitempty"`
	PoolId             string                 `protobuf:"bytes,4,opt,name=pool_id,json=poolId,proto3" json:"pool_id,omitempty"`
	Send               string                 `protobuf:"bytes,5,opt,name=send,proto3" json:"send,omitempty"`
	Receive            string                 `protobuf:"bytes,6,opt,name=receive,proto3" json:"receive,omitempty"`
	Timeout            int64                  `protobuf:"varint,7,opt,name=timeout,proto3" json:"timeout,omitempty"`
	Type               Monitor_MonitorType    `protobuf:"varint,8,opt,name=type,proto3,enum=Monitor_MonitorType" json:"type,omitempty"`
	ProvisioningStatus string                 `protobuf:"bytes,9,opt,name=provisioning_status,json=provisioningStatus,proto3" json:"provisioning_status,omitempty"`
	Method             Monitor_HttpMethod     `protobuf:"varint,10,opt,name=method,proto3,enum=Monitor_HttpMethod" json:"method,omitempty"`
	DomainName         string                 `protobuf:"bytes,11,opt,name=domain_name,json=domainName,proto3" json:"domain_name,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Monitor) Reset() {
	*x = Monitor{}
	mi := &file_internal_rpcmodels_rpc_models_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Monitor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Monitor) ProtoMessage() {}

func (x *Monitor) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpcmodels_rpc_models_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Monitor.ProtoReflect.Descriptor instead.
func (*Monitor) Descriptor() ([]byte, []int) {
	return file_internal_rpcmodels_rpc_models_proto_rawDescGZIP(), []int{6}
}

func (x *Monitor) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Monitor) GetAdminStateUp() bool {
	if x != nil {
		return x.AdminStateUp
	}
	return false
}

func (x *Monitor) GetInterval() int64 {
	if x != nil {
		return x.Interval
	}
	return 0
}

func (x *Monitor) GetPoolId() string {
	if x != nil {
		return x.PoolId
	}
	return ""
}

func (x *Monitor) GetSend() string {
	if x != nil {
		return x.Send
	}
	return ""
}

func (x *Monitor) GetReceive() string {
	if x != nil {
		return x.Receive
	}
	return ""
}

func (x *Monitor) GetTimeout() int64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *Monitor) GetType() Monitor_MonitorType {
	if x != nil {
		return x.Type
	}
	return Monitor_HTTP
}

func (x *Monitor) GetProvisioningStatus() string {
	if x != nil {
		return x.ProvisioningStatus
	}
	return ""
}

func (x *Monitor) GetMethod() Monitor_HttpMethod {
	if x != nil {
		return x.Method
	}
	return Monitor_GET
}

func (x *Monitor) GetDomainName() string {
	if x != nil {
		return x.DomainName
	}
	return ""
}

type SyncRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DomainId      []string               `protobuf:"bytes,1,rep,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncRequest) Reset() {
	*x = SyncRequest{}
	mi := &file_internal_rpcmodels_rpc_models_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncRequest) ProtoMessage() {}

func (x *SyncRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpcmodels_rpc_models_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncRequest.ProtoReflect.Descriptor instead.
func (*SyncRequest) Descriptor() ([]byte, []int) {
	return file_internal_rpcmodels_rpc_models_proto_rawDescGZIP(), []int{7}
}

func (x *SyncRequest) GetDomainId() []string {
	if x != nil {
		return x.DomainId
	}
	return nil
}

type SyncResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncResponse) Reset() {
	*x = SyncResponse{}
	mi := &file_internal_rpcmodels_rpc_models_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncResponse) ProtoMessage() {}

func (x *SyncResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpcmodels_rpc_models_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncResponse.ProtoReflect.Descriptor instead.
func (*SyncResponse) Descriptor() ([]byte, []int) {
	return file_internal_rpcmodels_rpc_models_proto_rawDescGZIP(), []int{8}
}

type GetCidrsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCidrsRequest) Reset() {
	*x = GetCidrsRequest{}
	mi := &file_internal_rpcmodels_rpc_models_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCidrsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCidrsRequest) ProtoMessage() {}

func (x *GetCidrsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpcmodels_rpc_models_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCidrsRequest.ProtoReflect.Descriptor instead.
func (*GetCidrsRequest) Descriptor() ([]byte, []int) {
	return file_internal_rpcmodels_rpc_models_proto_rawDescGZIP(), []int{9}
}

type GetCidrsResponse struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Cidrs         []*GetCidrsResponse_Cidr `protobuf:"bytes,1,rep,name=cidrs,proto3" json:"cidrs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCidrsResponse) Reset() {
	*x = GetCidrsResponse{}
	mi := &file_internal_rpcmodels_rpc_models_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCidrsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCidrsResponse) ProtoMessage() {}

func (x *GetCidrsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpcmodels_rpc_models_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCidrsResponse.ProtoReflect.Descriptor instead.
func (*GetCidrsResponse) Descriptor() ([]byte, []int) {
	return file_internal_rpcmodels_rpc_models_proto_rawDescGZIP(), []int{10}
}

func (x *GetCidrsResponse) GetCidrs() []*GetCidrsResponse_Cidr {
	if x != nil {
		return x.Cidrs
	}
	return nil
}

type GetDNSMetricsRequest struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	Domain        string                              `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Property      string                              `protobuf:"bytes,2,opt,name=property,proto3" json:"property,omitempty"`
	TimeRange     GetDNSMetricsRequest_TimeRangeValue `protobuf:"varint,3,opt,name=time_range,json=timeRange,proto3,enum=GetDNSMetricsRequest_TimeRangeValue" json:"time_range,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDNSMetricsRequest) Reset() {
	*x = GetDNSMetricsRequest{}
	mi := &file_internal_rpcmodels_rpc_models_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDNSMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDNSMetricsRequest) ProtoMessage() {}

func (x *GetDNSMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpcmodels_rpc_models_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDNSMetricsRequest.ProtoReflect.Descriptor instead.
func (*GetDNSMetricsRequest) Descriptor() ([]byte, []int) {
	return file_internal_rpcmodels_rpc_models_proto_rawDescGZIP(), []int{11}
}

func (x *GetDNSMetricsRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *GetDNSMetricsRequest) GetProperty() string {
	if x != nil {
		return x.Property
	}
	return ""
}

func (x *GetDNSMetricsRequest) GetTimeRange() GetDNSMetricsRequest_TimeRangeValue {
	if x != nil {
		return x.TimeRange
	}
	return GetDNSMetricsRequest_LAST_HOUR
}

type GetDNSMetricsResponse struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	Datacenters   []*GetDNSMetricsResponse_Datacenter `protobuf:"bytes,1,rep,name=datacenters,proto3" json:"datacenters,omitempty"`
	TotalRequests int64                               `protobuf:"varint,2,opt,name=total_requests,json=totalRequests,proto3" json:"total_requests,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDNSMetricsResponse) Reset() {
	*x = GetDNSMetricsResponse{}
	mi := &file_internal_rpcmodels_rpc_models_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDNSMetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDNSMetricsResponse) ProtoMessage() {}

func (x *GetDNSMetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpcmodels_rpc_models_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDNSMetricsResponse.ProtoReflect.Descriptor instead.
func (*GetDNSMetricsResponse) Descriptor() ([]byte, []int) {
	return file_internal_rpcmodels_rpc_models_proto_rawDescGZIP(), []int{12}
}

func (x *GetDNSMetricsResponse) GetDatacenters() []*GetDNSMetricsResponse_Datacenter {
	if x != nil {
		return x.Datacenters
	}
	return nil
}

func (x *GetDNSMetricsResponse) GetTotalRequests() int64 {
	if x != nil {
		return x.TotalRequests
	}
	return 0
}

type GetCidrsResponse_Cidr struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CidrId        int32                  `protobuf:"varint,1,opt,name=cidrId,proto3" json:"cidrId,omitempty"`
	ServiceId     int32                  `protobuf:"varint,2,opt,name=serviceId,proto3" json:"serviceId,omitempty"`
	ServiceName   string                 `protobuf:"bytes,3,opt,name=serviceName,proto3" json:"serviceName,omitempty"`
	Cidr          string                 `protobuf:"bytes,4,opt,name=cidr,proto3" json:"cidr,omitempty"`
	CidrMask      string                 `protobuf:"bytes,5,opt,name=cidrMask,proto3" json:"cidrMask,omitempty"`
	Port          string                 `protobuf:"bytes,6,opt,name=port,proto3" json:"port,omitempty"`
	CreationDate  string                 `protobuf:"bytes,7,opt,name=creationDate,proto3" json:"creationDate,omitempty"`
	EffectiveDate string                 `protobuf:"bytes,8,opt,name=effectiveDate,proto3" json:"effectiveDate,omitempty"`
	ChangeDate    string                 `protobuf:"bytes,9,opt,name=changeDate,proto3" json:"changeDate,omitempty"`
	MinIp         string                 `protobuf:"bytes,10,opt,name=minIp,proto3" json:"minIp,omitempty"`
	MaxIp         string                 `protobuf:"bytes,11,opt,name=maxIp,proto3" json:"maxIp,omitempty"`
	LastAction    string                 `protobuf:"bytes,12,opt,name=lastAction,proto3" json:"lastAction,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCidrsResponse_Cidr) Reset() {
	*x = GetCidrsResponse_Cidr{}
	mi := &file_internal_rpcmodels_rpc_models_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCidrsResponse_Cidr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCidrsResponse_Cidr) ProtoMessage() {}

func (x *GetCidrsResponse_Cidr) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpcmodels_rpc_models_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCidrsResponse_Cidr.ProtoReflect.Descriptor instead.
func (*GetCidrsResponse_Cidr) Descriptor() ([]byte, []int) {
	return file_internal_rpcmodels_rpc_models_proto_rawDescGZIP(), []int{10, 0}
}

func (x *GetCidrsResponse_Cidr) GetCidrId() int32 {
	if x != nil {
		return x.CidrId
	}
	return 0
}

func (x *GetCidrsResponse_Cidr) GetServiceId() int32 {
	if x != nil {
		return x.ServiceId
	}
	return 0
}

func (x *GetCidrsResponse_Cidr) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *GetCidrsResponse_Cidr) GetCidr() string {
	if x != nil {
		return x.Cidr
	}
	return ""
}

func (x *GetCidrsResponse_Cidr) GetCidrMask() string {
	if x != nil {
		return x.CidrMask
	}
	return ""
}

func (x *GetCidrsResponse_Cidr) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *GetCidrsResponse_Cidr) GetCreationDate() string {
	if x != nil {
		return x.CreationDate
	}
	return ""
}

func (x *GetCidrsResponse_Cidr) GetEffectiveDate() string {
	if x != nil {
		return x.EffectiveDate
	}
	return ""
}

func (x *GetCidrsResponse_Cidr) GetChangeDate() string {
	if x != nil {
		return x.ChangeDate
	}
	return ""
}

func (x *GetCidrsResponse_Cidr) GetMinIp() string {
	if x != nil {
		return x.MinIp
	}
	return ""
}

func (x *GetCidrsResponse_Cidr) GetMaxIp() string {
	if x != nil {
		return x.MaxIp
	}
	return ""
}

func (x *GetCidrsResponse_Cidr) GetLastAction() string {
	if x != nil {
		return x.LastAction
	}
	return ""
}

type GetDNSMetricsResponse_Datacenter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DatacenterId  string                 `protobuf:"bytes,1,opt,name=datacenter_id,json=datacenterId,proto3" json:"datacenter_id,omitempty"` // Datacenter ID
	Percentage    float32                `protobuf:"fixed32,2,opt,name=percentage,proto3" json:"percentage,omitempty"`
	Requests      int64                  `protobuf:"varint,3,opt,name=requests,proto3" json:"requests,omitempty"`
	Status        string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	TargetIp      string                 `protobuf:"bytes,5,opt,name=target_ip,json=targetIp,proto3" json:"target_ip,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDNSMetricsResponse_Datacenter) Reset() {
	*x = GetDNSMetricsResponse_Datacenter{}
	mi := &file_internal_rpcmodels_rpc_models_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDNSMetricsResponse_Datacenter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDNSMetricsResponse_Datacenter) ProtoMessage() {}

func (x *GetDNSMetricsResponse_Datacenter) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpcmodels_rpc_models_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDNSMetricsResponse_Datacenter.ProtoReflect.Descriptor instead.
func (*GetDNSMetricsResponse_Datacenter) Descriptor() ([]byte, []int) {
	return file_internal_rpcmodels_rpc_models_proto_rawDescGZIP(), []int{12, 0}
}

func (x *GetDNSMetricsResponse_Datacenter) GetDatacenterId() string {
	if x != nil {
		return x.DatacenterId
	}
	return ""
}

func (x *GetDNSMetricsResponse_Datacenter) GetPercentage() float32 {
	if x != nil {
		return x.Percentage
	}
	return 0
}

func (x *GetDNSMetricsResponse_Datacenter) GetRequests() int64 {
	if x != nil {
		return x.Requests
	}
	return 0
}

func (x *GetDNSMetricsResponse_Datacenter) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetDNSMetricsResponse_Datacenter) GetTargetIp() string {
	if x != nil {
		return x.TargetIp
	}
	return ""
}

var File_internal_rpcmodels_rpc_models_proto protoreflect.FileDescriptor

const file_internal_rpcmodels_rpc_models_proto_rawDesc = "" +
	"\n" +
	"#internal/rpcmodels/rpc_models.proto\"\x9e\x02\n" +
	"\x06Domain\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12$\n" +
	"\x0eadmin_state_up\x18\x02 \x01(\bR\fadminStateUp\x12\x18\n" +
	"\aaliases\x18\x03 \x03(\tR\aaliases\x12\x12\n" +
	"\x04fqdn\x18\x04 \x01(\tR\x04fqdn\x12\x12\n" +
	"\x04mode\x18\x05 \x01(\tR\x04mode\x12\x1b\n" +
	"\x05pools\x18\x06 \x03(\v2\x05.PoolR\x05pools\x12\x1f\n" +
	"\vrecord_type\x18\a \x01(\tR\n" +
	"recordType\x12-\n" +
	"\vdatacenters\x18\b \x03(\v2\v.DatacenterR\vdatacenters\x12/\n" +
	"\x13provisioning_status\x18\t \x01(\tR\x12provisioningStatus\"\xb6\x01\n" +
	"\x04Pool\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12$\n" +
	"\x0eadmin_state_up\x18\x02 \x01(\bR\fadminStateUp\x12!\n" +
	"\amembers\x18\x03 \x03(\v2\a.MemberR\amembers\x12$\n" +
	"\bmonitors\x18\x04 \x03(\v2\b.MonitorR\bmonitors\x12/\n" +
	"\x13provisioning_status\x18\x05 \x01(\tR\x12provisioningStatus\"\x8a\x03\n" +
	"\n" +
	"Datacenter\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12$\n" +
	"\x0eadmin_state_up\x18\x02 \x01(\bR\fadminStateUp\x12\x1c\n" +
	"\tcontinent\x18\x03 \x01(\tR\tcontinent\x12\x18\n" +
	"\acountry\x18\x04 \x01(\tR\acountry\x12*\n" +
	"\x11state_or_province\x18\x05 \x01(\tR\x0fstateOrProvince\x12\x12\n" +
	"\x04city\x18\x06 \x01(\tR\x04city\x12\x1c\n" +
	"\tlongitude\x18\a \x01(\x01R\tlongitude\x12\x1a\n" +
	"\blatitude\x18\b \x01(\x01R\blatitude\x12/\n" +
	"\x13provisioning_status\x18\t \x01(\tR\x12provisioningStatus\x12\x14\n" +
	"\x05scope\x18\n" +
	" \x01(\tR\x05scope\x12\x1a\n" +
	"\bprovider\x18\v \x01(\tR\bprovider\x12\x12\n" +
	"\x04meta\x18\f \x01(\x05R\x04meta\x12\x1d\n" +
	"\n" +
	"project_id\x18\r \x01(\tR\tprojectId\"P\n" +
	"\x10GeomapAssignment\x12\x1e\n" +
	"\n" +
	"datacenter\x18\x01 \x01(\tR\n" +
	"datacenter\x12\x1c\n" +
	"\tcountries\x18\x02 \x03(\tR\tcountries\"\xab\x01\n" +
	"\x06Geomap\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12-\n" +
	"\x12default_datacenter\x18\x02 \x01(\tR\x11defaultDatacenter\x121\n" +
	"\n" +
	"assignment\x18\x03 \x03(\v2\x11.GeomapAssignmentR\n" +
	"assignment\x12/\n" +
	"\x13provisioning_status\x18\x04 \x01(\tR\x12provisioningStatus\"\xbd\x01\n" +
	"\x06Member\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12$\n" +
	"\x0eadmin_state_up\x18\x02 \x01(\bR\fadminStateUp\x12\x18\n" +
	"\aaddress\x18\x03 \x01(\tR\aaddress\x12\x12\n" +
	"\x04port\x18\x04 \x01(\rR\x04port\x12\x1e\n" +
	"\n" +
	"datacenter\x18\x05 \x01(\tR\n" +
	"datacenter\x12/\n" +
	"\x13provisioning_status\x18\x06 \x01(\tR\x12provisioningStatus\"\x90\x04\n" +
	"\aMonitor\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12$\n" +
	"\x0eadmin_state_up\x18\x02 \x01(\bR\fadminStateUp\x12\x1a\n" +
	"\binterval\x18\x03 \x01(\x03R\binterval\x12\x17\n" +
	"\apool_id\x18\x04 \x01(\tR\x06poolId\x12\x12\n" +
	"\x04send\x18\x05 \x01(\tR\x04send\x12\x18\n" +
	"\areceive\x18\x06 \x01(\tR\areceive\x12\x18\n" +
	"\atimeout\x18\a \x01(\x03R\atimeout\x12(\n" +
	"\x04type\x18\b \x01(\x0e2\x14.Monitor.MonitorTypeR\x04type\x12/\n" +
	"\x13provisioning_status\x18\t \x01(\tR\x12provisioningStatus\x12+\n" +
	"\x06method\x18\n" +
	" \x01(\x0e2\x13.Monitor.HttpMethodR\x06method\x12\x1f\n" +
	"\vdomain_name\x18\v \x01(\tR\n" +
	"domainName\"Q\n" +
	"\vMonitorType\x12\b\n" +
	"\x04HTTP\x10\x00\x12\t\n" +
	"\x05HTTPS\x10\x01\x12\b\n" +
	"\x04ICMP\x10\x02\x12\a\n" +
	"\x03TCP\x10\x03\x12\a\n" +
	"\x03UDP\x10\x04\x12\a\n" +
	"\x03POP\x10\x05\x12\b\n" +
	"\x04SMTP\x10\a\"V\n" +
	"\n" +
	"HttpMethod\x12\a\n" +
	"\x03GET\x10\x00\x12\b\n" +
	"\x04POST\x10\x01\x12\a\n" +
	"\x03PUT\x10\x02\x12\b\n" +
	"\x04HEAD\x10\x03\x12\t\n" +
	"\x05PATCH\x10\x04\x12\n" +
	"\n" +
	"\x06DELETE\x10\x05\x12\v\n" +
	"\aOPTIONS\x10\x06\"*\n" +
	"\vSyncRequest\x12\x1b\n" +
	"\tdomain_id\x18\x01 \x03(\tR\bdomainId\"\x0e\n" +
	"\fSyncResponse\"\x11\n" +
	"\x0fGetCidrsRequest\"\x9b\x03\n" +
	"\x10GetCidrsResponse\x12,\n" +
	"\x05cidrs\x18\x01 \x03(\v2\x16.GetCidrsResponse.CidrR\x05cidrs\x1a\xd8\x02\n" +
	"\x04Cidr\x12\x16\n" +
	"\x06cidrId\x18\x01 \x01(\x05R\x06cidrId\x12\x1c\n" +
	"\tserviceId\x18\x02 \x01(\x05R\tserviceId\x12 \n" +
	"\vserviceName\x18\x03 \x01(\tR\vserviceName\x12\x12\n" +
	"\x04cidr\x18\x04 \x01(\tR\x04cidr\x12\x1a\n" +
	"\bcidrMask\x18\x05 \x01(\tR\bcidrMask\x12\x12\n" +
	"\x04port\x18\x06 \x01(\tR\x04port\x12\"\n" +
	"\fcreationDate\x18\a \x01(\tR\fcreationDate\x12$\n" +
	"\reffectiveDate\x18\b \x01(\tR\reffectiveDate\x12\x1e\n" +
	"\n" +
	"changeDate\x18\t \x01(\tR\n" +
	"changeDate\x12\x14\n" +
	"\x05minIp\x18\n" +
	" \x01(\tR\x05minIp\x12\x14\n" +
	"\x05maxIp\x18\v \x01(\tR\x05maxIp\x12\x1e\n" +
	"\n" +
	"lastAction\x18\f \x01(\tR\n" +
	"lastAction\"\xcd\x01\n" +
	"\x14GetDNSMetricsRequest\x12\x16\n" +
	"\x06domain\x18\x01 \x01(\tR\x06domain\x12\x1a\n" +
	"\bproperty\x18\x02 \x01(\tR\bproperty\x12C\n" +
	"\n" +
	"time_range\x18\x03 \x01(\x0e2$.GetDNSMetricsRequest.TimeRangeValueR\ttimeRange\"<\n" +
	"\x0eTimeRangeValue\x12\r\n" +
	"\tLAST_HOUR\x10\x00\x12\f\n" +
	"\bLAST_DAY\x10\x01\x12\r\n" +
	"\tLAST_WEEK\x10\x02\"\xa8\x02\n" +
	"\x15GetDNSMetricsResponse\x12C\n" +
	"\vdatacenters\x18\x01 \x03(\v2!.GetDNSMetricsResponse.DatacenterR\vdatacenters\x12%\n" +
	"\x0etotal_requests\x18\x02 \x01(\x03R\rtotalRequests\x1a\xa2\x01\n" +
	"\n" +
	"Datacenter\x12#\n" +
	"\rdatacenter_id\x18\x01 \x01(\tR\fdatacenterId\x12\x1e\n" +
	"\n" +
	"percentage\x18\x02 \x01(\x02R\n" +
	"percentage\x12\x1a\n" +
	"\brequests\x18\x03 \x01(\x03R\brequests\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status\x12\x1b\n" +
	"\ttarget_ip\x18\x05 \x01(\tR\btargetIpB/Z-github.com/sapcc/andromeda/internal/rpcmodelsb\x06proto3"

var (
	file_internal_rpcmodels_rpc_models_proto_rawDescOnce sync.Once
	file_internal_rpcmodels_rpc_models_proto_rawDescData []byte
)

func file_internal_rpcmodels_rpc_models_proto_rawDescGZIP() []byte {
	file_internal_rpcmodels_rpc_models_proto_rawDescOnce.Do(func() {
		file_internal_rpcmodels_rpc_models_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_internal_rpcmodels_rpc_models_proto_rawDesc), len(file_internal_rpcmodels_rpc_models_proto_rawDesc)))
	})
	return file_internal_rpcmodels_rpc_models_proto_rawDescData
}

var file_internal_rpcmodels_rpc_models_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_internal_rpcmodels_rpc_models_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_internal_rpcmodels_rpc_models_proto_goTypes = []any{
	(Monitor_MonitorType)(0),                 // 0: Monitor.MonitorType
	(Monitor_HttpMethod)(0),                  // 1: Monitor.HttpMethod
	(GetDNSMetricsRequest_TimeRangeValue)(0), // 2: GetDNSMetricsRequest.TimeRangeValue
	(*Domain)(nil),                           // 3: Domain
	(*Pool)(nil),                             // 4: Pool
	(*Datacenter)(nil),                       // 5: Datacenter
	(*GeomapAssignment)(nil),                 // 6: GeomapAssignment
	(*Geomap)(nil),                           // 7: Geomap
	(*Member)(nil),                           // 8: Member
	(*Monitor)(nil),                          // 9: Monitor
	(*SyncRequest)(nil),                      // 10: SyncRequest
	(*SyncResponse)(nil),                     // 11: SyncResponse
	(*GetCidrsRequest)(nil),                  // 12: GetCidrsRequest
	(*GetCidrsResponse)(nil),                 // 13: GetCidrsResponse
	(*GetDNSMetricsRequest)(nil),             // 14: GetDNSMetricsRequest
	(*GetDNSMetricsResponse)(nil),            // 15: GetDNSMetricsResponse
	(*GetCidrsResponse_Cidr)(nil),            // 16: GetCidrsResponse.Cidr
	(*GetDNSMetricsResponse_Datacenter)(nil), // 17: GetDNSMetricsResponse.Datacenter
}
var file_internal_rpcmodels_rpc_models_proto_depIdxs = []int32{
	4,  // 0: Domain.pools:type_name -> Pool
	5,  // 1: Domain.datacenters:type_name -> Datacenter
	8,  // 2: Pool.members:type_name -> Member
	9,  // 3: Pool.monitors:type_name -> Monitor
	6,  // 4: Geomap.assignment:type_name -> GeomapAssignment
	0,  // 5: Monitor.type:type_name -> Monitor.MonitorType
	1,  // 6: Monitor.method:type_name -> Monitor.HttpMethod
	16, // 7: GetCidrsResponse.cidrs:type_name -> GetCidrsResponse.Cidr
	2,  // 8: GetDNSMetricsRequest.time_range:type_name -> GetDNSMetricsRequest.TimeRangeValue
	17, // 9: GetDNSMetricsResponse.datacenters:type_name -> GetDNSMetricsResponse.Datacenter
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_internal_rpcmodels_rpc_models_proto_init() }
func file_internal_rpcmodels_rpc_models_proto_init() {
	if File_internal_rpcmodels_rpc_models_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_internal_rpcmodels_rpc_models_proto_rawDesc), len(file_internal_rpcmodels_rpc_models_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_internal_rpcmodels_rpc_models_proto_goTypes,
		DependencyIndexes: file_internal_rpcmodels_rpc_models_proto_depIdxs,
		EnumInfos:         file_internal_rpcmodels_rpc_models_proto_enumTypes,
		MessageInfos:      file_internal_rpcmodels_rpc_models_proto_msgTypes,
	}.Build()
	File_internal_rpcmodels_rpc_models_proto = out.File
	file_internal_rpcmodels_rpc_models_proto_goTypes = nil
	file_internal_rpcmodels_rpc_models_proto_depIdxs = nil
}
