// Code generated by go-swagger; DO NOT EDIT.

// SPDX-FileCopyrightText: Copyright 2025 SAP SE or an SAP affiliate company
//
// SPDX-License-Identifier: Apache-2.0

package monitors

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewDeleteMonitorsMonitorIDParams creates a new DeleteMonitorsMonitorIDParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewDeleteMonitorsMonitorIDParams() *DeleteMonitorsMonitorIDParams {
	return &DeleteMonitorsMonitorIDParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteMonitorsMonitorIDParamsWithTimeout creates a new DeleteMonitorsMonitorIDParams object
// with the ability to set a timeout on a request.
func NewDeleteMonitorsMonitorIDParamsWithTimeout(timeout time.Duration) *DeleteMonitorsMonitorIDParams {
	return &DeleteMonitorsMonitorIDParams{
		timeout: timeout,
	}
}

// NewDeleteMonitorsMonitorIDParamsWithContext creates a new DeleteMonitorsMonitorIDParams object
// with the ability to set a context for a request.
func NewDeleteMonitorsMonitorIDParamsWithContext(ctx context.Context) *DeleteMonitorsMonitorIDParams {
	return &DeleteMonitorsMonitorIDParams{
		Context: ctx,
	}
}

// NewDeleteMonitorsMonitorIDParamsWithHTTPClient creates a new DeleteMonitorsMonitorIDParams object
// with the ability to set a custom HTTPClient for a request.
func NewDeleteMonitorsMonitorIDParamsWithHTTPClient(client *http.Client) *DeleteMonitorsMonitorIDParams {
	return &DeleteMonitorsMonitorIDParams{
		HTTPClient: client,
	}
}

/*
DeleteMonitorsMonitorIDParams contains all the parameters to send to the API endpoint

	for the delete monitors monitor ID operation.

	Typically these are written to a http.Request.
*/
type DeleteMonitorsMonitorIDParams struct {

	/* MonitorID.

	   The UUID of the monitor

	   Format: uuid
	*/
	MonitorID strfmt.UUID

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the delete monitors monitor ID params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteMonitorsMonitorIDParams) WithDefaults() *DeleteMonitorsMonitorIDParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the delete monitors monitor ID params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteMonitorsMonitorIDParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the delete monitors monitor ID params
func (o *DeleteMonitorsMonitorIDParams) WithTimeout(timeout time.Duration) *DeleteMonitorsMonitorIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete monitors monitor ID params
func (o *DeleteMonitorsMonitorIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete monitors monitor ID params
func (o *DeleteMonitorsMonitorIDParams) WithContext(ctx context.Context) *DeleteMonitorsMonitorIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete monitors monitor ID params
func (o *DeleteMonitorsMonitorIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete monitors monitor ID params
func (o *DeleteMonitorsMonitorIDParams) WithHTTPClient(client *http.Client) *DeleteMonitorsMonitorIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete monitors monitor ID params
func (o *DeleteMonitorsMonitorIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithMonitorID adds the monitorID to the delete monitors monitor ID params
func (o *DeleteMonitorsMonitorIDParams) WithMonitorID(monitorID strfmt.UUID) *DeleteMonitorsMonitorIDParams {
	o.SetMonitorID(monitorID)
	return o
}

// SetMonitorID adds the monitorId to the delete monitors monitor ID params
func (o *DeleteMonitorsMonitorIDParams) SetMonitorID(monitorID strfmt.UUID) {
	o.MonitorID = monitorID
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteMonitorsMonitorIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param monitor_id
	if err := r.SetPathParam("monitor_id", o.MonitorID.String()); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
