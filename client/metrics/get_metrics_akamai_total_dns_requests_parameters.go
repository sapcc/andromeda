// Code generated by go-swagger; DO NOT EDIT.

// SPDX-FileCopyrightText: Copyright 2025 SAP SE or an SAP affiliate company
//
// SPDX-License-Identifier: Apache-2.0

package metrics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetMetricsAkamaiTotalDNSRequestsParams creates a new GetMetricsAkamaiTotalDNSRequestsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetMetricsAkamaiTotalDNSRequestsParams() *GetMetricsAkamaiTotalDNSRequestsParams {
	return &GetMetricsAkamaiTotalDNSRequestsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetMetricsAkamaiTotalDNSRequestsParamsWithTimeout creates a new GetMetricsAkamaiTotalDNSRequestsParams object
// with the ability to set a timeout on a request.
func NewGetMetricsAkamaiTotalDNSRequestsParamsWithTimeout(timeout time.Duration) *GetMetricsAkamaiTotalDNSRequestsParams {
	return &GetMetricsAkamaiTotalDNSRequestsParams{
		timeout: timeout,
	}
}

// NewGetMetricsAkamaiTotalDNSRequestsParamsWithContext creates a new GetMetricsAkamaiTotalDNSRequestsParams object
// with the ability to set a context for a request.
func NewGetMetricsAkamaiTotalDNSRequestsParamsWithContext(ctx context.Context) *GetMetricsAkamaiTotalDNSRequestsParams {
	return &GetMetricsAkamaiTotalDNSRequestsParams{
		Context: ctx,
	}
}

// NewGetMetricsAkamaiTotalDNSRequestsParamsWithHTTPClient creates a new GetMetricsAkamaiTotalDNSRequestsParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetMetricsAkamaiTotalDNSRequestsParamsWithHTTPClient(client *http.Client) *GetMetricsAkamaiTotalDNSRequestsParams {
	return &GetMetricsAkamaiTotalDNSRequestsParams{
		HTTPClient: client,
	}
}

/*
GetMetricsAkamaiTotalDNSRequestsParams contains all the parameters to send to the API endpoint

	for the get metrics akamai total DNS requests operation.

	Typically these are written to a http.Request.
*/
type GetMetricsAkamaiTotalDNSRequestsParams struct {

	/* ProjectID.

	   Filter metrics by project ID
	*/
	ProjectID *string

	/* PropertyName.

	   Filter metrics by Akamai GTM property name
	*/
	PropertyName *string

	/* TimeRange.

	   Time range for metrics data

	   Default: "last_hour"
	*/
	TimeRange *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get metrics akamai total DNS requests params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetMetricsAkamaiTotalDNSRequestsParams) WithDefaults() *GetMetricsAkamaiTotalDNSRequestsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get metrics akamai total DNS requests params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetMetricsAkamaiTotalDNSRequestsParams) SetDefaults() {
	var (
		timeRangeDefault = string("last_hour")
	)

	val := GetMetricsAkamaiTotalDNSRequestsParams{
		TimeRange: &timeRangeDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the get metrics akamai total DNS requests params
func (o *GetMetricsAkamaiTotalDNSRequestsParams) WithTimeout(timeout time.Duration) *GetMetricsAkamaiTotalDNSRequestsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get metrics akamai total DNS requests params
func (o *GetMetricsAkamaiTotalDNSRequestsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get metrics akamai total DNS requests params
func (o *GetMetricsAkamaiTotalDNSRequestsParams) WithContext(ctx context.Context) *GetMetricsAkamaiTotalDNSRequestsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get metrics akamai total DNS requests params
func (o *GetMetricsAkamaiTotalDNSRequestsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get metrics akamai total DNS requests params
func (o *GetMetricsAkamaiTotalDNSRequestsParams) WithHTTPClient(client *http.Client) *GetMetricsAkamaiTotalDNSRequestsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get metrics akamai total DNS requests params
func (o *GetMetricsAkamaiTotalDNSRequestsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithProjectID adds the projectID to the get metrics akamai total DNS requests params
func (o *GetMetricsAkamaiTotalDNSRequestsParams) WithProjectID(projectID *string) *GetMetricsAkamaiTotalDNSRequestsParams {
	o.SetProjectID(projectID)
	return o
}

// SetProjectID adds the projectId to the get metrics akamai total DNS requests params
func (o *GetMetricsAkamaiTotalDNSRequestsParams) SetProjectID(projectID *string) {
	o.ProjectID = projectID
}

// WithPropertyName adds the propertyName to the get metrics akamai total DNS requests params
func (o *GetMetricsAkamaiTotalDNSRequestsParams) WithPropertyName(propertyName *string) *GetMetricsAkamaiTotalDNSRequestsParams {
	o.SetPropertyName(propertyName)
	return o
}

// SetPropertyName adds the propertyName to the get metrics akamai total DNS requests params
func (o *GetMetricsAkamaiTotalDNSRequestsParams) SetPropertyName(propertyName *string) {
	o.PropertyName = propertyName
}

// WithTimeRange adds the timeRange to the get metrics akamai total DNS requests params
func (o *GetMetricsAkamaiTotalDNSRequestsParams) WithTimeRange(timeRange *string) *GetMetricsAkamaiTotalDNSRequestsParams {
	o.SetTimeRange(timeRange)
	return o
}

// SetTimeRange adds the timeRange to the get metrics akamai total DNS requests params
func (o *GetMetricsAkamaiTotalDNSRequestsParams) SetTimeRange(timeRange *string) {
	o.TimeRange = timeRange
}

// WriteToRequest writes these params to a swagger request
func (o *GetMetricsAkamaiTotalDNSRequestsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ProjectID != nil {

		// query param project_id
		var qrProjectID string

		if o.ProjectID != nil {
			qrProjectID = *o.ProjectID
		}
		qProjectID := qrProjectID
		if qProjectID != "" {

			if err := r.SetQueryParam("project_id", qProjectID); err != nil {
				return err
			}
		}
	}

	if o.PropertyName != nil {

		// query param property_name
		var qrPropertyName string

		if o.PropertyName != nil {
			qrPropertyName = *o.PropertyName
		}
		qPropertyName := qrPropertyName
		if qPropertyName != "" {

			if err := r.SetQueryParam("property_name", qPropertyName); err != nil {
				return err
			}
		}
	}

	if o.TimeRange != nil {

		// query param time_range
		var qrTimeRange string

		if o.TimeRange != nil {
			qrTimeRange = *o.TimeRange
		}
		qTimeRange := qrTimeRange
		if qTimeRange != "" {

			if err := r.SetQueryParam("time_range", qTimeRange); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
