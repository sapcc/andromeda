// Code generated by go-swagger; DO NOT EDIT.

// SPDX-FileCopyrightText: Copyright 2025 SAP SE or an SAP affiliate company
//
// SPDX-License-Identifier: Apache-2.0

package members

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/sapcc/andromeda/models"
)

// PostMembersReader is a Reader for the PostMembers structure.
type PostMembersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostMembersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostMembersCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostMembersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostMembersNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewPostMembersDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPostMembersCreated creates a PostMembersCreated with default headers values
func NewPostMembersCreated() *PostMembersCreated {
	return &PostMembersCreated{}
}

/*
PostMembersCreated describes a response with status code 201, with default header values.

Created member.
*/
type PostMembersCreated struct {
	Payload *PostMembersCreatedBody
}

// IsSuccess returns true when this post members created response has a 2xx status code
func (o *PostMembersCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post members created response has a 3xx status code
func (o *PostMembersCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post members created response has a 4xx status code
func (o *PostMembersCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this post members created response has a 5xx status code
func (o *PostMembersCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this post members created response a status code equal to that given
func (o *PostMembersCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the post members created response
func (o *PostMembersCreated) Code() int {
	return 201
}

func (o *PostMembersCreated) Error() string {
	return fmt.Sprintf("[POST /members][%d] postMembersCreated  %+v", 201, o.Payload)
}

func (o *PostMembersCreated) String() string {
	return fmt.Sprintf("[POST /members][%d] postMembersCreated  %+v", 201, o.Payload)
}

func (o *PostMembersCreated) GetPayload() *PostMembersCreatedBody {
	return o.Payload
}

func (o *PostMembersCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostMembersCreatedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostMembersBadRequest creates a PostMembersBadRequest with default headers values
func NewPostMembersBadRequest() *PostMembersBadRequest {
	return &PostMembersBadRequest{}
}

/*
PostMembersBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type PostMembersBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this post members bad request response has a 2xx status code
func (o *PostMembersBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post members bad request response has a 3xx status code
func (o *PostMembersBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post members bad request response has a 4xx status code
func (o *PostMembersBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post members bad request response has a 5xx status code
func (o *PostMembersBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post members bad request response a status code equal to that given
func (o *PostMembersBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post members bad request response
func (o *PostMembersBadRequest) Code() int {
	return 400
}

func (o *PostMembersBadRequest) Error() string {
	return fmt.Sprintf("[POST /members][%d] postMembersBadRequest  %+v", 400, o.Payload)
}

func (o *PostMembersBadRequest) String() string {
	return fmt.Sprintf("[POST /members][%d] postMembersBadRequest  %+v", 400, o.Payload)
}

func (o *PostMembersBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostMembersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostMembersNotFound creates a PostMembersNotFound with default headers values
func NewPostMembersNotFound() *PostMembersNotFound {
	return &PostMembersNotFound{}
}

/*
PostMembersNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PostMembersNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this post members not found response has a 2xx status code
func (o *PostMembersNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post members not found response has a 3xx status code
func (o *PostMembersNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post members not found response has a 4xx status code
func (o *PostMembersNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post members not found response has a 5xx status code
func (o *PostMembersNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post members not found response a status code equal to that given
func (o *PostMembersNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the post members not found response
func (o *PostMembersNotFound) Code() int {
	return 404
}

func (o *PostMembersNotFound) Error() string {
	return fmt.Sprintf("[POST /members][%d] postMembersNotFound  %+v", 404, o.Payload)
}

func (o *PostMembersNotFound) String() string {
	return fmt.Sprintf("[POST /members][%d] postMembersNotFound  %+v", 404, o.Payload)
}

func (o *PostMembersNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostMembersNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostMembersDefault creates a PostMembersDefault with default headers values
func NewPostMembersDefault(code int) *PostMembersDefault {
	return &PostMembersDefault{
		_statusCode: code,
	}
}

/*
PostMembersDefault describes a response with status code -1, with default header values.

Unexpected Error
*/
type PostMembersDefault struct {
	_statusCode int

	Payload *models.Error
}

// IsSuccess returns true when this post members default response has a 2xx status code
func (o *PostMembersDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this post members default response has a 3xx status code
func (o *PostMembersDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this post members default response has a 4xx status code
func (o *PostMembersDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this post members default response has a 5xx status code
func (o *PostMembersDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this post members default response a status code equal to that given
func (o *PostMembersDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the post members default response
func (o *PostMembersDefault) Code() int {
	return o._statusCode
}

func (o *PostMembersDefault) Error() string {
	return fmt.Sprintf("[POST /members][%d] PostMembers default  %+v", o._statusCode, o.Payload)
}

func (o *PostMembersDefault) String() string {
	return fmt.Sprintf("[POST /members][%d] PostMembers default  %+v", o._statusCode, o.Payload)
}

func (o *PostMembersDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostMembersDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
PostMembersBody post members body
swagger:model PostMembersBody
*/
type PostMembersBody struct {

	// member
	// Required: true
	Member *models.Member `json:"member"`
}

// Validate validates this post members body
func (o *PostMembersBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMember(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostMembersBody) validateMember(formats strfmt.Registry) error {

	if err := validate.Required("member"+"."+"member", "body", o.Member); err != nil {
		return err
	}

	if o.Member != nil {
		if err := o.Member.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("member" + "." + "member")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("member" + "." + "member")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this post members body based on the context it is used
func (o *PostMembersBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateMember(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostMembersBody) contextValidateMember(ctx context.Context, formats strfmt.Registry) error {

	if o.Member != nil {
		if err := o.Member.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("member" + "." + "member")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("member" + "." + "member")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostMembersBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostMembersBody) UnmarshalBinary(b []byte) error {
	var res PostMembersBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
PostMembersCreatedBody post members created body
swagger:model PostMembersCreatedBody
*/
type PostMembersCreatedBody struct {

	// member
	Member *models.Member `json:"member,omitempty"`
}

// Validate validates this post members created body
func (o *PostMembersCreatedBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMember(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostMembersCreatedBody) validateMember(formats strfmt.Registry) error {
	if swag.IsZero(o.Member) { // not required
		return nil
	}

	if o.Member != nil {
		if err := o.Member.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postMembersCreated" + "." + "member")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("postMembersCreated" + "." + "member")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this post members created body based on the context it is used
func (o *PostMembersCreatedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateMember(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostMembersCreatedBody) contextValidateMember(ctx context.Context, formats strfmt.Registry) error {

	if o.Member != nil {
		if err := o.Member.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postMembersCreated" + "." + "member")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("postMembersCreated" + "." + "member")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostMembersCreatedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostMembersCreatedBody) UnmarshalBinary(b []byte) error {
	var res PostMembersCreatedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
