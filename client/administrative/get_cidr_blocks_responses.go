// Code generated by go-swagger; DO NOT EDIT.

// SPDX-FileCopyrightText: Copyright 2025 SAP SE or an SAP affiliate company
//
// SPDX-License-Identifier: Apache-2.0

package administrative

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/sapcc/andromeda/models"
)

// GetCidrBlocksReader is a Reader for the GetCidrBlocks structure.
type GetCidrBlocksReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCidrBlocksReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCidrBlocksOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetCidrBlocksDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetCidrBlocksOK creates a GetCidrBlocksOK with default headers values
func NewGetCidrBlocksOK() *GetCidrBlocksOK {
	return &GetCidrBlocksOK{}
}

/*
GetCidrBlocksOK describes a response with status code 200, with default header values.

A JSON array of CIDR blocks
*/
type GetCidrBlocksOK struct {
	Payload interface{}
}

// IsSuccess returns true when this get cidr blocks o k response has a 2xx status code
func (o *GetCidrBlocksOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get cidr blocks o k response has a 3xx status code
func (o *GetCidrBlocksOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cidr blocks o k response has a 4xx status code
func (o *GetCidrBlocksOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get cidr blocks o k response has a 5xx status code
func (o *GetCidrBlocksOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get cidr blocks o k response a status code equal to that given
func (o *GetCidrBlocksOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get cidr blocks o k response
func (o *GetCidrBlocksOK) Code() int {
	return 200
}

func (o *GetCidrBlocksOK) Error() string {
	return fmt.Sprintf("[GET /cidr-blocks][%d] getCidrBlocksOK  %+v", 200, o.Payload)
}

func (o *GetCidrBlocksOK) String() string {
	return fmt.Sprintf("[GET /cidr-blocks][%d] getCidrBlocksOK  %+v", 200, o.Payload)
}

func (o *GetCidrBlocksOK) GetPayload() interface{} {
	return o.Payload
}

func (o *GetCidrBlocksOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCidrBlocksDefault creates a GetCidrBlocksDefault with default headers values
func NewGetCidrBlocksDefault(code int) *GetCidrBlocksDefault {
	return &GetCidrBlocksDefault{
		_statusCode: code,
	}
}

/*
GetCidrBlocksDefault describes a response with status code -1, with default header values.

Unexpected Error
*/
type GetCidrBlocksDefault struct {
	_statusCode int

	Payload *models.Error
}

// IsSuccess returns true when this get cidr blocks default response has a 2xx status code
func (o *GetCidrBlocksDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get cidr blocks default response has a 3xx status code
func (o *GetCidrBlocksDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get cidr blocks default response has a 4xx status code
func (o *GetCidrBlocksDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get cidr blocks default response has a 5xx status code
func (o *GetCidrBlocksDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get cidr blocks default response a status code equal to that given
func (o *GetCidrBlocksDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the get cidr blocks default response
func (o *GetCidrBlocksDefault) Code() int {
	return o._statusCode
}

func (o *GetCidrBlocksDefault) Error() string {
	return fmt.Sprintf("[GET /cidr-blocks][%d] GetCidrBlocks default  %+v", o._statusCode, o.Payload)
}

func (o *GetCidrBlocksDefault) String() string {
	return fmt.Sprintf("[GET /cidr-blocks][%d] GetCidrBlocks default  %+v", o._statusCode, o.Payload)
}

func (o *GetCidrBlocksDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCidrBlocksDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
