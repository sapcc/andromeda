// Code generated by go-swagger; DO NOT EDIT.

// SPDX-FileCopyrightText: Copyright 2025 SAP SE or an SAP affiliate company
//
// SPDX-License-Identifier: Apache-2.0

package administrative

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/sapcc/andromeda/models"
)

// GetQuotasProjectIDReader is a Reader for the GetQuotasProjectID structure.
type GetQuotasProjectIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetQuotasProjectIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetQuotasProjectIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetQuotasProjectIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetQuotasProjectIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetQuotasProjectIDOK creates a GetQuotasProjectIDOK with default headers values
func NewGetQuotasProjectIDOK() *GetQuotasProjectIDOK {
	return &GetQuotasProjectIDOK{}
}

/*
GetQuotasProjectIDOK describes a response with status code 200, with default header values.

Shows the details of a specific monitor.
*/
type GetQuotasProjectIDOK struct {
	Payload *GetQuotasProjectIDOKBody
}

// IsSuccess returns true when this get quotas project Id o k response has a 2xx status code
func (o *GetQuotasProjectIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get quotas project Id o k response has a 3xx status code
func (o *GetQuotasProjectIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get quotas project Id o k response has a 4xx status code
func (o *GetQuotasProjectIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get quotas project Id o k response has a 5xx status code
func (o *GetQuotasProjectIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get quotas project Id o k response a status code equal to that given
func (o *GetQuotasProjectIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get quotas project Id o k response
func (o *GetQuotasProjectIDOK) Code() int {
	return 200
}

func (o *GetQuotasProjectIDOK) Error() string {
	return fmt.Sprintf("[GET /quotas/{project_id}][%d] getQuotasProjectIdOK  %+v", 200, o.Payload)
}

func (o *GetQuotasProjectIDOK) String() string {
	return fmt.Sprintf("[GET /quotas/{project_id}][%d] getQuotasProjectIdOK  %+v", 200, o.Payload)
}

func (o *GetQuotasProjectIDOK) GetPayload() *GetQuotasProjectIDOKBody {
	return o.Payload
}

func (o *GetQuotasProjectIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetQuotasProjectIDOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQuotasProjectIDNotFound creates a GetQuotasProjectIDNotFound with default headers values
func NewGetQuotasProjectIDNotFound() *GetQuotasProjectIDNotFound {
	return &GetQuotasProjectIDNotFound{}
}

/*
GetQuotasProjectIDNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetQuotasProjectIDNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get quotas project Id not found response has a 2xx status code
func (o *GetQuotasProjectIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get quotas project Id not found response has a 3xx status code
func (o *GetQuotasProjectIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get quotas project Id not found response has a 4xx status code
func (o *GetQuotasProjectIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get quotas project Id not found response has a 5xx status code
func (o *GetQuotasProjectIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get quotas project Id not found response a status code equal to that given
func (o *GetQuotasProjectIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get quotas project Id not found response
func (o *GetQuotasProjectIDNotFound) Code() int {
	return 404
}

func (o *GetQuotasProjectIDNotFound) Error() string {
	return fmt.Sprintf("[GET /quotas/{project_id}][%d] getQuotasProjectIdNotFound  %+v", 404, o.Payload)
}

func (o *GetQuotasProjectIDNotFound) String() string {
	return fmt.Sprintf("[GET /quotas/{project_id}][%d] getQuotasProjectIdNotFound  %+v", 404, o.Payload)
}

func (o *GetQuotasProjectIDNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetQuotasProjectIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetQuotasProjectIDDefault creates a GetQuotasProjectIDDefault with default headers values
func NewGetQuotasProjectIDDefault(code int) *GetQuotasProjectIDDefault {
	return &GetQuotasProjectIDDefault{
		_statusCode: code,
	}
}

/*
GetQuotasProjectIDDefault describes a response with status code -1, with default header values.

Unexpected Error
*/
type GetQuotasProjectIDDefault struct {
	_statusCode int

	Payload *models.Error
}

// IsSuccess returns true when this get quotas project ID default response has a 2xx status code
func (o *GetQuotasProjectIDDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get quotas project ID default response has a 3xx status code
func (o *GetQuotasProjectIDDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get quotas project ID default response has a 4xx status code
func (o *GetQuotasProjectIDDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get quotas project ID default response has a 5xx status code
func (o *GetQuotasProjectIDDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get quotas project ID default response a status code equal to that given
func (o *GetQuotasProjectIDDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the get quotas project ID default response
func (o *GetQuotasProjectIDDefault) Code() int {
	return o._statusCode
}

func (o *GetQuotasProjectIDDefault) Error() string {
	return fmt.Sprintf("[GET /quotas/{project_id}][%d] GetQuotasProjectID default  %+v", o._statusCode, o.Payload)
}

func (o *GetQuotasProjectIDDefault) String() string {
	return fmt.Sprintf("[GET /quotas/{project_id}][%d] GetQuotasProjectID default  %+v", o._statusCode, o.Payload)
}

func (o *GetQuotasProjectIDDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetQuotasProjectIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetQuotasProjectIDOKBody get quotas project ID o k body
swagger:model GetQuotasProjectIDOKBody
*/
type GetQuotasProjectIDOKBody struct {

	// quota
	Quota struct {
		models.Quota

		models.QuotaUsage
	} `json:"quota,omitempty"`
}

// Validate validates this get quotas project ID o k body
func (o *GetQuotasProjectIDOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateQuota(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetQuotasProjectIDOKBody) validateQuota(formats strfmt.Registry) error {
	if swag.IsZero(o.Quota) { // not required
		return nil
	}

	return nil
}

// ContextValidate validate this get quotas project ID o k body based on the context it is used
func (o *GetQuotasProjectIDOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateQuota(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetQuotasProjectIDOKBody) contextValidateQuota(ctx context.Context, formats strfmt.Registry) error {

	return nil
}

// MarshalBinary interface implementation
func (o *GetQuotasProjectIDOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetQuotasProjectIDOKBody) UnmarshalBinary(b []byte) error {
	var res GetQuotasProjectIDOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
