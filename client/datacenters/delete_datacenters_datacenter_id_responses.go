// Code generated by go-swagger; DO NOT EDIT.

// SPDX-FileCopyrightText: Copyright 2025 SAP SE or an SAP affiliate company
//
// SPDX-License-Identifier: Apache-2.0

package datacenters

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/sapcc/andromeda/models"
)

// DeleteDatacentersDatacenterIDReader is a Reader for the DeleteDatacentersDatacenterID structure.
type DeleteDatacentersDatacenterIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteDatacentersDatacenterIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteDatacentersDatacenterIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewDeleteDatacentersDatacenterIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDeleteDatacentersDatacenterIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteDatacentersDatacenterIDNoContent creates a DeleteDatacentersDatacenterIDNoContent with default headers values
func NewDeleteDatacentersDatacenterIDNoContent() *DeleteDatacentersDatacenterIDNoContent {
	return &DeleteDatacentersDatacenterIDNoContent{}
}

/*
DeleteDatacentersDatacenterIDNoContent describes a response with status code 204, with default header values.

Resource successfully deleted.
*/
type DeleteDatacentersDatacenterIDNoContent struct {
}

// IsSuccess returns true when this delete datacenters datacenter Id no content response has a 2xx status code
func (o *DeleteDatacentersDatacenterIDNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete datacenters datacenter Id no content response has a 3xx status code
func (o *DeleteDatacentersDatacenterIDNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete datacenters datacenter Id no content response has a 4xx status code
func (o *DeleteDatacentersDatacenterIDNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete datacenters datacenter Id no content response has a 5xx status code
func (o *DeleteDatacentersDatacenterIDNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete datacenters datacenter Id no content response a status code equal to that given
func (o *DeleteDatacentersDatacenterIDNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete datacenters datacenter Id no content response
func (o *DeleteDatacentersDatacenterIDNoContent) Code() int {
	return 204
}

func (o *DeleteDatacentersDatacenterIDNoContent) Error() string {
	return fmt.Sprintf("[DELETE /datacenters/{datacenter_id}][%d] deleteDatacentersDatacenterIdNoContent ", 204)
}

func (o *DeleteDatacentersDatacenterIDNoContent) String() string {
	return fmt.Sprintf("[DELETE /datacenters/{datacenter_id}][%d] deleteDatacentersDatacenterIdNoContent ", 204)
}

func (o *DeleteDatacentersDatacenterIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDatacentersDatacenterIDNotFound creates a DeleteDatacentersDatacenterIDNotFound with default headers values
func NewDeleteDatacentersDatacenterIDNotFound() *DeleteDatacentersDatacenterIDNotFound {
	return &DeleteDatacentersDatacenterIDNotFound{}
}

/*
DeleteDatacentersDatacenterIDNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteDatacentersDatacenterIDNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete datacenters datacenter Id not found response has a 2xx status code
func (o *DeleteDatacentersDatacenterIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete datacenters datacenter Id not found response has a 3xx status code
func (o *DeleteDatacentersDatacenterIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete datacenters datacenter Id not found response has a 4xx status code
func (o *DeleteDatacentersDatacenterIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete datacenters datacenter Id not found response has a 5xx status code
func (o *DeleteDatacentersDatacenterIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete datacenters datacenter Id not found response a status code equal to that given
func (o *DeleteDatacentersDatacenterIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete datacenters datacenter Id not found response
func (o *DeleteDatacentersDatacenterIDNotFound) Code() int {
	return 404
}

func (o *DeleteDatacentersDatacenterIDNotFound) Error() string {
	return fmt.Sprintf("[DELETE /datacenters/{datacenter_id}][%d] deleteDatacentersDatacenterIdNotFound  %+v", 404, o.Payload)
}

func (o *DeleteDatacentersDatacenterIDNotFound) String() string {
	return fmt.Sprintf("[DELETE /datacenters/{datacenter_id}][%d] deleteDatacentersDatacenterIdNotFound  %+v", 404, o.Payload)
}

func (o *DeleteDatacentersDatacenterIDNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteDatacentersDatacenterIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDatacentersDatacenterIDDefault creates a DeleteDatacentersDatacenterIDDefault with default headers values
func NewDeleteDatacentersDatacenterIDDefault(code int) *DeleteDatacentersDatacenterIDDefault {
	return &DeleteDatacentersDatacenterIDDefault{
		_statusCode: code,
	}
}

/*
DeleteDatacentersDatacenterIDDefault describes a response with status code -1, with default header values.

Unexpected Error
*/
type DeleteDatacentersDatacenterIDDefault struct {
	_statusCode int

	Payload *models.Error
}

// IsSuccess returns true when this delete datacenters datacenter ID default response has a 2xx status code
func (o *DeleteDatacentersDatacenterIDDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this delete datacenters datacenter ID default response has a 3xx status code
func (o *DeleteDatacentersDatacenterIDDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this delete datacenters datacenter ID default response has a 4xx status code
func (o *DeleteDatacentersDatacenterIDDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this delete datacenters datacenter ID default response has a 5xx status code
func (o *DeleteDatacentersDatacenterIDDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this delete datacenters datacenter ID default response a status code equal to that given
func (o *DeleteDatacentersDatacenterIDDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the delete datacenters datacenter ID default response
func (o *DeleteDatacentersDatacenterIDDefault) Code() int {
	return o._statusCode
}

func (o *DeleteDatacentersDatacenterIDDefault) Error() string {
	return fmt.Sprintf("[DELETE /datacenters/{datacenter_id}][%d] DeleteDatacentersDatacenterID default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteDatacentersDatacenterIDDefault) String() string {
	return fmt.Sprintf("[DELETE /datacenters/{datacenter_id}][%d] DeleteDatacentersDatacenterID default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteDatacentersDatacenterIDDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteDatacentersDatacenterIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
